language: c
compiler:
  - gcc
  - clang
os:
  - linux


branches:
  only:
    - master
    - coverity

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "i5wXM5UGRLxlcO+4Q+l3UjTka7mDE6wCD0gyU9LXVzMD5yACHKRQ2XQFVviMvBp5oXL3aBxnbZh1TdkzkI4+XIvMIPCwNQf0vpEclQ/zCdJtVZAA2G2dC/DL4RbPGN0ad5vLJCgmuOP5BqOpoIeC0+GLnmpRwcqNf9yeeaDqxLiGt24SFplPvwNnEDDUn2X8TiSfTh962utqO5UIgonWvTX1RVN4jLUl+G98inSZYuG0+oRmvb26PBqhkSRFVK1spbxoFQi15ySgmNKFTo9Miqq3VPxKLnVhEIrSY2pUW8swu+9d7+YYJUxO9w4WL4xLQqXiX/SXLr4jpaK0FS1otlT8zjlasTLGBfIYTZoE9pUz4h2R2vFPkiGkQGKHZHlPwqshy33w7IjwYJV41qvgpo0LYUj23rQ1LE24wbVpt1Nz+TQJaX7307nWrSaXYw9oYh2e32M1NPGZNFrEWvtmTZlyC6TFCwXtwFyzdLWhFfXO4U/bFcqKL00grtIzotSq+pdFVI2VFeDpepDAettYKYWEOv17GdlreQ53xtFCjmbH+IBkxH1JuFkk+uXYMR4Y7ramCA2aTppcteu7GB6dePfiHQDc2lrYyFUp58pQB3StDBUrAndbj3AwQRiF+6WKo7Z93aE1IWcmUESMxC4wFl76Tq4ESJR+a8Xq+aNZ+NE="


addons:
  coverity_scan:
    project:
      name: "CESNET/Nemea-Framework"
      description: "Build submitted via Travis CI"
    notification_email: cejkat@cesnet.cz
    build_command_prepend: "./bootstrap.sh; ./configure; make clean"
    build_command:   "make -j 4"
    branch_pattern: coverity


before_install:
   - sudo apt-get -y install gdb

before_script:
   # Set core file pattern to executable.core.pid
   - cat /proc/sys/kernel/core_pattern
   # cannot set core_pattern %e.core.%p
   # Set the core file limit to unlimited so a core file is generated upon crash
   - ulimit -c unlimited -S

script:
  # build with debug symbols and print possible core-dumps
  - ./bootstrap.sh && ./configure --enable-debug && make clean && make && make check
  - for i in $(find -name '*core*'); do
    ( cd `dirname "$i"`; c=`basename "$i"`;
    exe=`file "$c"|grep 'core file'|sed "s/^[^']*'//;s/[   '].*//;"`;
    if [ -n "$exe" ]; then
    gdb "$exe" "$c" -ex "thread apply all bt" -ex "set pagination 0" -batch;
    rm "$c";
    fi;);done;
  # build without debug symbols and print possible core-dumps
  - ./configure && make clean && make && make check
  - for i in $(find -name '*core*'); do
    ( cd `dirname "$i"`; c=`basename "$i"`;
    exe=`file "$c"|grep 'core file'|sed "s/^[^']*'//;s/[   '].*//;"`;
    if [ -n "$exe" ]; then
    gdb "$exe" "$c" -ex "thread apply all bt" -ex "set pagination 0" -batch;
    rm "$c";
    fi;);done;

